
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'hubs'
version: '1.0.1'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"

# Model config
models:
  hubs:
    external:
      bing_ads:
        +schema: data_lake
        +tags: ["advertising", "bing"]
      google_ads:
        +schema: data_lake
        +tags: ["advertising", "google"]
    data_lake:
      +schema: data_lake
      int_service_supply:
        materialized: view
        +tags: supply
        +bind: false
      freshdesk:
        +tags: freshdesk
    
    hubspot:
      +schema: data_lake
      +tags: ["hubspot", "crm"]
    mapping:
      +schema: data_lake
    netsuite:
      +schema: data_lake
      +tags: ["netsuite", "finance"]
    netsuite_sandbox:
      +schema: data_lake
      +enabled: false
    reporting:
      +schema: reporting
      +materialized: table
      orders:
        +tags: ["orders"]
      contacts:
        +tags: ["contacts"]

# Seeds
seeds:
  +schema: seed_data
  states:
    +column_types:
      state: varchar(128)
      abbreviation: varchar(128)
      code: varchar(28)
  industries:
    +column_types:
      industry: varchar(128)
      industry_mapped: varchar(128)
  countries_mapping:
    +column_types:
      created: timestamp
      updated: timestamp
      deleted: timestamp
      country_id: int
      name: varchar(2048)
      alpha2_code: varchar(2048)
      continent: varchar(2048)
      currency_code: varchar(16)
      coordinates: varchar(2048)
      lat: varchar(2048)
      lon: varchar(2048)
      region: varchar(2048)
      market: varchar(2048)
      country_iso3: varchar(16)
      is_in_eu: boolean
      has_payment_embargo: boolean
      is_in_efta: boolean
  seed_employees:
    +column_types:
      id: int
      category: varchar(512)
      category_id: int
      team: varchar(512)
      name: varchar(512)
      image: varchar(2048)
      title: varchar(512)
      firstname: varchar(512)
      nickname: varchar(512)
      postalcode: varchar(16)
      lat: float
      lon: float
      drinks: int
      links: varchar(512)
      recommended_by: varchar(512)
  freshdesk_ticket_scope:
    +column_types:
      scope_id: int
      description: varchar(56)
    +tags: freshdesk
  freshdesk_conversation_source:
    +column_types:
      source_id: int
      decription: varchar(128)
    +tags: freshdesk
  freshdesk_ticket_priority:
    +column_types:
      priority_id: int
      description: varchar(56)
    +tags: freshdesk
  freshdesk_ticket_source:
    +column_types:
      source_id: int
      description: varchar(56)
    +tags: freshdesk
  freshdesk_ticket_status:
    +column_types:
      status_id: int
      description: varchar(56)
      created_by: varchar(56)
    +tags: freshdesk
  macro_factors:
    +column_types:
      location: varchar(56)
      indicator: varchar(56)
      date: varchar(56)
      value: int
      clean_date: date
    +tags:     
  seo_page_groups:
    +column_types:
      page: varchar(4056)
      page_group: varchar(4056)
    +tags: ["search", "marketing"]
  order_status:
    +column_types:
      order_status_id: int
      hubspot_status_value: varchar(256)
      supply_status_value: varchar(128)
      mapped_value: varchar(128)
  hubspot_engagement_dispositions:
    +column_types:
      uuid: varchar(128)
      label: varchar(56)
      is_deleted: boolean
      _load_timestamp: timestamp
    +tags: ["crm", "hubspot"]
  hubspot_dealstages:
    +column_types: 
      id_redshift: int
      dealstage_internal_label: varchar(256)
      dealstage_internal_value: varchar(256)
      dealstage_mapped_value: varchar(256)
      pipeline: varchar(256)
      sort_index: varchar(4)
    +tags: ["hubspot"]
  hubspot_technology_mapping:
    +column_types:
      technology_id: int
      hubspot_technology: varchar(56)    
  seed_supplier_business_classification:
    +column_types:
      supplier_id: int
      name: varchar(256)    
      business_classification: varchar(256)    
      technology_name: varchar(256)    

# Snapshot configuration
snapshots:
  +target_schema: dbt_prod_snapshots # TODO: figure out proper way to run in user schema for testing

# Tests
# Can be found in models/schema.yml

# Access
# On run-end read-only access is granted to the ro_group in Redshift on the target schema's contents.
on-run-end:
  - "{{ grant_select_on_schemas(schemas, 'ro_group') }}"
